[{"type":"element","tagName":"h1","attributes":[],"children":[{"type":"text","content":"在Javascript中，"},{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"this"}]},{"type":"text","content":" 指针是什么？它是怎样工作的"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"h2","attributes":[],"children":[{"type":"text","content":"Answer"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"p","attributes":[],"children":[{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"this"}]},{"type":"text","content":" 机制提供了更优雅的方式来隐含地“传递”一个对象引用，导致更加干净的API设计和更容易的复用。\n"},{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"this"}]},{"type":"text","content":" 不是编译时绑定，而是运行时绑定。它依赖于函数调用的上下文条件。"},{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"this"}]},{"type":"text","content":" 绑定与函数声明的位置没有任何关系，而与函数被调用的方式紧密相连。\n它指针表示执行函数的上下文的对象。"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"h3","attributes":[],"children":[{"type":"text","content":"Object literals"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"pre","attributes":[],"children":[{"type":"element","tagName":"code","attributes":[{"key":"class","value":"language-es6"}],"children":[{"type":"text","content":"var myObject = {\n  property: this,\n  regularFunction: function() {\n    return this\n  },\n  arrowFunction: () =&gt; {\n    return this\n  },\n  iife: (function() {\n    return this\n  })()\n}\n\nmyObject.regularFunction() // 指向 myObject\nmyObject[&quot;regularFunction&quot;]() // 指向 myObject\n\nmyObject.property // 指向 lexical `this` 而非 myObject\nmyObject.arrowFunction() // 指向 lexical `this` 而非 myObject\nmyObject.iife // 指向 lexical `this` 而非 myObject\nconst regularFunction = myObject.regularFunction\nregularFunction() // 指向 lexical `this` 而非 myObject\n"}]}]},{"type":"text","content":"\n"},{"type":"element","tagName":"h3","attributes":[],"children":[{"type":"text","content":"Event listeners"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"p","attributes":[],"children":[{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"this"}]},{"type":"text","content":" refers to the element listening to the event."}]},{"type":"text","content":"\n"},{"type":"element","tagName":"pre","attributes":[],"children":[{"type":"element","tagName":"code","attributes":[{"key":"class","value":"language-es6"}],"children":[{"type":"text","content":"document.body.addEventListener(&quot;click&quot;, function() {\n    console.log(this) // document.body\n})\ndocument.body.addEventListener(&quot;click&quot;, () =&gt; {\n    console.log(this) // 指向 lexical `this` 而非 document.body\n})\n"}]}]},{"type":"text","content":"\n"},{"type":"element","tagName":"h3","attributes":[],"children":[{"type":"text","content":"Constructors"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"pre","attributes":[],"children":[{"type":"element","tagName":"code","attributes":[{"key":"class","value":"language-es6"}],"children":[{"type":"text","content":"class Example {\n  constructor() {\n    console.log(this) // myExample\n  }\n}\nconst myExample = new Example()\n"}]}]},{"type":"text","content":"\n"},{"type":"element","tagName":"h3","attributes":[],"children":[{"type":"text","content":"Manual"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"p","attributes":[],"children":[{"type":"text","content":"使用"},{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"call"}]},{"type":"text","content":" 和 "},{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"apply"}]},{"type":"text","content":" 可以强制改变 "},{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"this"}]},{"type":"text","content":" 的指向，使它指向作为第一个参数传递的对象。"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"pre","attributes":[],"children":[{"type":"element","tagName":"code","attributes":[{"key":"class","value":"language-es6"}],"children":[{"type":"text","content":"var myFunction = function() {\n  return this\n}\nmyFunction.call({ customThis: true }) // { customThis: true }\n"}]}]},{"type":"text","content":"\n"},{"type":"element","tagName":"h3","attributes":[],"children":[{"type":"text","content":"Unwanted "},{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"this"}]}]},{"type":"text","content":"\n"},{"type":"element","tagName":"p","attributes":[],"children":[{"type":"text","content":"因为"},{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"this"}]},{"type":"text","content":"可以根据范围而改变，所以当使用常规函数时它可能具有意外的值。"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"pre","attributes":[],"children":[{"type":"element","tagName":"code","attributes":[{"key":"class","value":"language-es6"}],"children":[{"type":"text","content":"var obj = {\n  arr: [1, 2, 3],\n  doubleArr() {\n    return this.arr.map(function(value) {\n      // this is now this.arr\n      return this.double(value)\n    })\n  },\n  double(value) {\n    return value * 2\n  }\n}\nvar otherObj = {\n  arr: [1, 2, 3],\n  doubleArr() {\n    return this.arr.map(value =&gt; {\n      // this 指向 otherObj\n      return this.double(value)\n    })\n  },\n  double(value) {\n    return value * 2\n  }\n}\nobj.doubleArr() // 1, 2, 3\n"}]}]},{"type":"text","content":"\n"},{"type":"element","tagName":"h2","attributes":[],"children":[{"type":"text","content":"Good to hear"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"ul","attributes":[],"children":[{"type":"text","content":"\n"},{"type":"element","tagName":"li","attributes":[],"children":[{"type":"text","content":"在严格模式在，全局的 "},{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"this"}]},{"type":"text","content":" 为 "},{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"undefined"}]},{"type":"text","content":"，但是在非严格模式下 "},{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"this"}]},{"type":"text","content":" 指向全局对象（游览器中是 "},{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"window"}]},{"type":"text","content":"）;"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"li","attributes":[],"children":[{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"Function.prototype.call"}]},{"type":"text","content":" 和 "},{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"Function.prototype.apply"}]},{"type":"text","content":" 将执行函数的 "},{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"this"}]},{"type":"text","content":" 上下文设置为第一个参数;"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"li","attributes":[],"children":[{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"Function.prototype.bind"}]},{"type":"text","content":" 返回一个新函数，强制执行 "},{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"this"}]},{"type":"text","content":" 上下文作为第一个参数，不能被其他函数更改;"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"li","attributes":[],"children":[{"type":"text","content":"如果一个函数要求根据它的调用方式改变它的 "},{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"this"}]},{"type":"text","content":" 上下文，你必须使用 "},{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"function"}]},{"type":"text","content":" 关键字。当你想要“this”作为周围（词汇）上下文时，请使用箭头函数。"}]},{"type":"text","content":"\n"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"h2","attributes":[],"children":[{"type":"text","content":"Additional links"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"ul","attributes":[],"children":[{"type":"text","content":"\n"},{"type":"element","tagName":"li","attributes":[],"children":[{"type":"element","tagName":"a","attributes":[{"key":"href","value":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this"}],"children":[{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"this"}]},{"type":"text","content":" on MDN"}]}]},{"type":"text","content":"\n"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"p","attributes":[],"children":[{"type":"text","content":"&lt;!-- tags: (javascript) --&gt;"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"p","attributes":[],"children":[{"type":"text","content":"&lt;!-- expertise: (2) --&gt;"}]},{"type":"text","content":"\n"}]