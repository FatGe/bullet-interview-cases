[{"type":"element","tagName":"h1","attributes":[],"children":[{"type":"text","content":"在 JavaScript 中如何浅复制一个对象"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"h2","attributes":[],"children":[{"type":"text","content":"Answer"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"p","attributes":[],"children":[{"type":"text","content":"使用对象扩展运算符 "},{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"..."}]},{"type":"text","content":"，可以复制对象自己的可枚举属性到新的对象。完成对象的浅层克隆。"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"pre","attributes":[],"children":[{"type":"element","tagName":"code","attributes":[{"key":"class","value":"language-es6"}],"children":[{"type":"text","content":"const obj = { a: 1, b: 2 }\nconst shallowClone = { ...obj }\n"}]}]},{"type":"text","content":"\n"},{"type":"element","tagName":"p","attributes":[],"children":[{"type":"text","content":"使用这种技术时，prototypes将会被忽略。此外，不会克隆嵌套对象，而是复制它们的引用，因此嵌套对象仍然引用原始的对象。深度克隆要复杂得多，因为要有效地克隆可能嵌套在对象中的任何类型的对象（Date，RegExp，Function，Set等）。"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"p","attributes":[],"children":[{"type":"text","content":"其他方法有:"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"ul","attributes":[],"children":[{"type":"text","content":"\n"},{"type":"element","tagName":"li","attributes":[],"children":[{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"JSON.parse(JSON.stringify(obj))"}]},{"type":"text","content":" 可用于深度克隆一个简单的对象，但它是CPU密集型的，且只接受有效的JSON。"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"li","attributes":[],"children":[{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"Object.assign({}, obj)"}]},{"type":"text","content":" 大体上等同于 {{}, ...obj}."}]},{"type":"text","content":"\n"},{"type":"element","tagName":"li","attributes":[],"children":[{"type":"element","tagName":"code","attributes":[],"children":[{"type":"text","content":"Object.keys(obj).reduce((acc, key) =&gt; (acc[key] = obj[key], acc), {})"}]},{"type":"text","content":" 是另一个更冗长的替代方案，更深入地展示了这个概念。"}]},{"type":"text","content":"\n"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"h2","attributes":[],"children":[{"type":"text","content":"Good to hear"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"ul","attributes":[],"children":[{"type":"text","content":"\n"},{"type":"element","tagName":"li","attributes":[],"children":[{"type":"text","content":"JavaScript通过引用传递对象，这意味着嵌套对象将复制它们的引用，而不是它们的值。"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"li","attributes":[],"children":[{"type":"text","content":"可以使用相同的方法合并两个对象。"}]},{"type":"text","content":"\n"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"h2","attributes":[],"children":[{"type":"text","content":"Additional links"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"p","attributes":[],"children":[{"type":"text","content":"&lt;!-- tags: (javascript) --&gt;"}]},{"type":"text","content":"\n"},{"type":"element","tagName":"p","attributes":[],"children":[{"type":"text","content":"&lt;!-- expertise: (0) --&gt;"}]},{"type":"text","content":"\n"}]